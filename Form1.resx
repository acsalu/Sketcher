<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAABFdJREFUaEPFWr9LW1EUdujg0KFDhw4d+gd07NDRsUNHB4cOGTsULBp/oWKwIiKi
        SJAgXQQdRAUREZHgIBkqKipWBBEpEiSDoqKiSJDX73seNXk5Sd6P+8wHHzG55577nfvuj3Pvs8oUmpub
        P7e0tLSCQ+A0vqfAfyS+/wFnwTjYAdZ0dXW9kqqVAQRUR6PRL62trb8hKA1aHnmC4MbBWvh6LW7DB3sO
        jUfATI6YoDxHID/ZKdJMOGhqavqKxv46GjdGBHGAz2/SnDnwEcMxx7DasGkikBSG5ztpPhjg7D2chtbr
        JZjGE/8kMvwB4rmymBzrnoj2r8A6keMNFE8HmuMKMCKy3AHCOWwq1vNOQs8tO1TklYZM2EqM+XLMsGNF
        ZnHA8MVWGx9c5z4kUgsh67xW0Td7enqsw8NDK51OWxMTE6qNF0Ljd5GbD9lhjQ+dvb09KxcMJh6Pq7Yu
        meEwF9nPQAHTA62Cb7a1tVlra2vW/f29yH/GxsaG/XS0ei4YE9kPQETV+DG0VWd4eNjueSey2aw1MzOj
        1ilFLu95OzWzSs3QNDkHTk9PRf4DGERnZ6dqX4p5c0FSYtXQD9vb263V1VWrr69PLVtcXLRubm7sAM7O
        zgps3BBPISny7fHvJ58vyuXlZVsce5d/az3M8c/5MTc3V1Dmhtzc7MnMHU4z8Ev2OoXn4vLy0pqamlLt
        gxDa69j7PAaqBn64vb0tsgvBvSCRSKj1fDLBAHiG1Qo9k+LcgEF2d3erPjxylgFMO370Ra75x8fHIrE0
        Li4u7Mms+fHIdc6BlFLgmVzP3WJyclL14YNpBsBrD63QNWOxmHV9fS3ySuPo6Ej14ZdGltCVlRWRVx4j
        IyOqD79kALx0UgvdcGBgQM11NGxubqo+AjDDAALl/zs7O/akLAfuDb29vaqPANxiALzu0wo9kSlBKSST
        SbVeQM4zAN5VaoWeODY2ZovU5gN3YkPLZh6ZwzGAGmeBW46Ojqq/U3AuwkgjhJHHk9iJo8AVid3dXTvf
        z/2diRpPXQsLC3b6kFtmilj+sw0NDW/tbBRfxjWjcswFT1j9/f155dydAx4fi5IbsC2ewJdazagcnROX
        y2kqlQpyVHRNaI6K/Ke7oHOnUTkWW3nu7u5MpgsF5PDB5weR/wBG5DQsRy2A/f19e0XS7A1ySGQ/gwd7
        BOEpL3oMgJsUT1eDg4OqnWGeP01eJ1Do6WqFidnS0pKp3N4tO0SuDjwFI+l1GIS2A44UkaqD9y0wNnrI
        N0GIv2psbPwoMkuDb0ZYQXNUKUJPrchzB1So0xxVgtDyS2R5AypHUPnW6fAl6Vv8I+CgIu/J0C7fj3kb
        NsUAR3zltO5sJCyivQPXE9YtmLXC8Q80EObTYDrTUXapDIL6+vo3aCSGYIzNDfhibjNUdIcNA9wveMWN
        xpN+gqFokP/RwhwsPzF7aTCbhRAuuwmQlwScL7mbIYfdFjgvV/kRM71dVfUfjvlKAG/z9PcAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>